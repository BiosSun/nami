@charset "utf-8";

@use '../../styles/nami';

.nami-linear {
    // direction
    // ---------------------------
    --nami-linear--direction: row;

    @each $name,
        $val
            in (
                horizontal: row,
                horizontal-reverse: row-reverse,
                vertical: column,
                vertical-reverse: column-reverse
            )
    {
        &--#{$name} {
            --nami-linear--direction: #{$val};
        }
    }

    // justify
    // ---------------------------

    --nami-linear--justify: flex-start;

    @each $name,
        $val
            in (
                start: flex-start,
                end: flex-end,
                center: center,
                between: space-between,
                around: space-around
            )
    {
        &--justify-#{$name} {
            --nami-linear--justify: #{$val};
        }
    }

    // align
    // ---------------------------

    --nami-linear--align: strech;

    @each $name, $val in (start: flex-start, end: flex-end, center: center, stretch: stretch) {
        &--align-#{$name} {
            --nami-linear--align: #{$val};
        }
    }

    // padding
    // ---------------------------

    --nami-linear--padding: 0;

    @each $name,
        $val
            in (
                small: calc(var(--distance-horizontal) / 2),
                common: var(--distance-horizontal),
                large: calc(var(--distance-horizontal) * 2)
            )
    {
        &--padding-#{$name} {
            --nami-linear--padding: #{$val};
        }
    }

    // spacing
    // ---------------------------

    > .nami-linear__item {
        --nami-linear--spacing: 0px;
    }

    @each $name,
        $val
            in (
                small: calc(var(--distance-horizontal) / 2),
                common: var(--distance-horizontal),
                large: calc(var(--distance-horizontal) * 2)
            )
    {
        &--spacing-#{$name} {
            // NOTE 因为 spacing 是通过在 item 上添加外边距来实现的，因此 spacing 变量应该指定在 item 上，
            //      否则 linear 嵌套时会有问题。
            > .nami-linear__item {
                --nami-linear--spacing: #{$val};
            }
        }
    }

    // styles
    // ---------------------------

    display: flex;
    flex-direction: var(--nami-linear--direction);
    justify-content: var(--nami-linear--justify);
    align-items: var(--nami-linear--align);

    padding: var(--nami-linear--padding);
}

.nami-linear__item {
    flex: 0 0 auto;

    // flex
    // ---------------------------

    &--flex {
        flex: 1 1 auto;

        .nami-linear--horizontal > &,
        .nami-linear--horizontal-reverse > & {
            min-width: 0;
        }

        .nami-linear--vertical > &,
        .nami-linear--vertical-reverse > & {
            min-height: 0;
        }
    }

    @for $i from 1 through 10 {
        &--flex-#{$i} {
            flex: $i $i auto;
        }
    }

    // col
    // ---------------------------

    &--col {
        box-sizing: border-box;

        flex-grow: 0;
        flex-shrink: 0;

        .nami-linear--horizontal > &,
        .nami-linear--horizontal-reverse > & {
            min-width: 0;
        }

        .nami-linear--vertical > &,
        .nami-linear--vertical-reverse > & {
            min-height: 0;
        }
    }

    @for $i from 1 through 24 {
        &--col-#{$i} {
            flex-basis: calc(
                (100% - var(--nami-linear--spacing) * 23) /
                    #{24 /
                    $i} +
                    var(--nami-linear--spacing) *
                    #{$i -
                    1}
            );
        }
    }

    // align
    // ---------------------------
    @each $name, $val in (start: flex-start, end: flex-end, center: center, stretch: stretch) {
        &--align-#{$name} {
            align-self: #{$val};
        }
    }

    // spacing
    // ---------------------------

    .nami-linear--horizontal > & {
        margin-left: calc(var(--nami-linear--spacing) / 2);
        margin-right: calc(var(--nami-linear--spacing) / 2);

        &:first-child {
            margin-left: 0;
        }

        &:last-child {
            margin-right: 0;
        }
    }

    .nami-linear--horizontal-reverse > & {
        margin-left: calc(var(--nami-linear--spacing) / 2);
        margin-right: calc(var(--nami-linear--spacing) / 2);

        &:first-child {
            margin-right: 0;
        }

        &:last-child {
            margin-left: 0;
        }
    }

    .nami-linear--vertical > & {
        margin-top: calc(var(--nami-linear--spacing) / 2);
        margin-bottom: calc(var(--nami-linear--spacing) / 2);

        &:first-child {
            margin-top: 0;
        }

        &:last-child {
            margin-bottom: 0;
        }
    }

    .nami-linear--vertical-reverse > & {
        margin-top: calc(var(--nami-linear--spacing) / 2);
        margin-bottom: calc(var(--nami-linear--spacing) / 2);

        &:first-child {
            margin-bottom: 0;
        }

        &:last-child {
            margin-top: 0;
        }
    }
}
